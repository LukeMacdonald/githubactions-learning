name: Notes Application CI Pipeline
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{hashFiles('**/package-lock.json')}}
      - name: Install dependencies
        run: npm install --prefix src

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: -/.npm
          key: deps-node-modules-${{hashFiles('**/package-lock.json')}}
      - name: Install dependencies
        run: npm install --prefix src
      - name: Lint Code
        id: lint-test
        run: npm run test-lint --prefix src >> lint.txt
      - name: Log Error
        if: failure() && steps.lint-test.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: lint.txt

  unit:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~./npm
          key: deps-node-modules-${{hashFiles('**/package-lock.json')}}
      - name: Install dependencies
        run: npm install --prefix src
      - name: Unit Testing
        id: unit-test
        run: npm run test-unit --prefix src >> unit.txt
      - name: Log Error
        if: failure() && steps.integration-test.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: unit.txt

  integration:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~./npm
          key: deps-node-modules-${{hashFiles('**/package-lock.json')}}
      - name: Install dependencies
        run: npm install --prefix src
      - name: Run MongoDB Docker Container
        run: docker-compose up -d
      - name: Integration Testing
        id: integration-test
        run: npm run test-integration --prefix src >> integration.txt
      - name: Log Error
        if: failure() && steps.integration-test.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: integration.txt